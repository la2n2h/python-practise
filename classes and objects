create a class Circle

# Import the library
```
import matplotlib.pyplot as plt
%matplotlib inline 
```
# Create a class Circle
```
class Cirle(object):
# constructor
def __init__(self, radius=3, color='blue')
  self.radius = radius
  self.color = color

# method
  self.radius = self.radius + r
  return(self.radius)

# method
def drawCircle(self):
  plt.gca().add_patch(plt.Circle(0,0), radius = self.radius, fc=self.color)
  plt.axis('scaled')
  plot.show()

# Create an object RedCircle
RedCircle = Circle(10, 'red')

# Find out the methods can be used on the object RedCircle

dir(RedCircle)
['__class__',
 '__delattr__',
 '__dict__',
 '__dir__',
 '__doc__',
 '__eq__',
 '__format__',
 '__ge__',
 '__getattribute__',
 '__getstate__',
 '__gt__',
 '__hash__',
 '__init__',
 '__init_subclass__',
 '__le__',
 '__lt__',
 '__module__',
 '__ne__',
 '__new__',
 '__reduce__',
 '__reduce_ex__',
 '__repr__',
 '__setattr__',
 '__sizeof__',
 '__str__',
 '__subclasshook__',
 '__weakref__',
 'add_radius',
 'color',
 'drawCircle',
 'radius']

# print the object attributes
RedCircle.radius
10
RedCircle.color
'red'

# Set the object attribute radius

RedCircle.radius = 1
RedCircle.radius

1

# Call the method drawCircle
RedCircle.drawCircle()

# Use method to change the object attribute radius

print('Radius of object:',RedCircle.radius)
RedCircle.add_radius(2)
print('Radius of object of after applying the method add_radius(2):',RedCircle.radius)
RedCircle.add_radius(5)
print('Radius of object of after applying the method add_radius(5):',RedCircle.radius)


The Rectangle Class

import matplotlib.pyplot as plt
%matplotlib inline

class Rectangle(object):
    def __init__(self, width, height, color):
        self.width = width
        self.height = height
        self.color = color

    def drawRectangle(self):
        plt.gca().add_patch(plt.Rectangle((0, 0), self.width, self.height, fc=self.color))
        plt.axis('scaled')
        plt.show()

skinnyRectangle= Rectangle(2, 3, 'blue')

skinnyRectangle.width
skinnyRectangle.height
skinnyRectangle.color

skinnyRectangle.drawRectangle()

FatYellowRectangle.drawRectangle()


# creating a Python program to represent vehicles using a class. Each car should have attributes for maximum speed and mileage.Â¶

class vehicles (object):
class vehicle(object):
    color = "white"

    def __init__(self, speed, mileage):
        self.speed = speed
        self.mileage = mileage
        self.capacity = None 

    def seat_capacity(self, capacity):
        self.capacity = capacity

    def display_properties(self):
        print("properties of the vehicle : ")
        print("color", self.color)
        print("speed", self.speed)
        print("mileage", self.mileage)
        print("seat capacity" , self.capacity)

vehicle1 = vehicle(180, 25)
vehicle1.seat_capacity(5)
vehicle1. display_properties()

vehicle2 = vehicle(220, 35)
vehicle2.seat_capacity(5)
vehicle2. display_properties()


